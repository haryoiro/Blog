
@import './mixin';
code[class*="language-"],
pre[class*="language-"] {
	color: #f8f8f2;
	background: none;
	text-shadow: 0 1px rgba(0, 0, 0, 0.3);
	font-family: "Fira Code", Consolas ,Menlo, Courier, monospace;
	font-size: 14px;
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	word-wrap: normal;

	tab-size: 2;
	hyphens: none;
}

/* Code blocks */
pre[class*="language-"] {
	padding: 1em;
	margin: .5em 0;
	overflow: scroll;
  border-radius: .3em;
  max-width: calc(100% - 1.414rem);
	@include mq(MAX) { max-width: #{map-get($maw, MAX)} }
  @include mq(PC) { max-width: #{map-get($maw, PC)} }
  @include mq(TABLET) { max-width: #{map-get($maw, TABLET)} }
  @include mq(PHONE) { max-width: #{map-get($maw, PHONE)} }
  @include mq(SM) { max-width: #{map-get($maw, SM)} }
  @include mq(MI) { max-width: #{map-get($maw, MI)} }
}


:not(pre) > code[class*="language-"],
pre[class*="language-"] {
	background: #272822;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
	padding: .1em .3em;
	border-radius: .3em;
	white-space: normal;
}
.token {
	.comment,
	.prolog,
	.doctype,
	.cdata {
		color: #8292a2;
	}
	.punctuation {
		color: #f8f8f2;
	}
	.namespace {
		opacity: .7;
	}
	.property,
	.tag,
	.constant,
	.symbol,
	.deleted {
		color: #f92672;
	}
	.boolean,
	.number {
		color: #ae81ff;
	}
	.selector,
	.attr-name,
	.string,
	.char,
	.builtin,
	.inserted {
		color: #a6e22e;
	}
	.operator,
	.entity,
	.url,
	.language-css &.string,
	.style &.string,
	.variable {
		color: #f8f8f2;
	}

	.atrule,
	.attr-value,
	.function,
	.class-name {
		color: #e6db74;
	}
	.keyword {
		color: #66d9ef;
	}
	.regex,
	.important {
		color: #fd971f;
	}

	.important,
	.bold {
		font-weight: bold;
	}
	.italic {
		font-style: italic;
	}
	.entity {
		cursor: help;
	}
}

pre[data-line] {
	position: relative;
	padding: 1em 0 1em 3em;
}

.line-highlight {
	position: absolute;
	left: 0;
	right: 0;
	padding: inherit 0;
	margin-top: 1em; /* Same as .prismâ€™s padding-top */

	background: hsla(24, 20%, 50%,.08);
	background: linear-gradient(to right, hsla(24, 20%, 50%,.1) 70%, hsla(24, 20%, 50%,0));

	pointer-events: none;

	line-height: inherit;
	white-space: pre;
}
